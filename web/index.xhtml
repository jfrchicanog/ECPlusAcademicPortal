<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
      xmlns:ui="http://java.sun.com/jsf/facelets">

    <h:head>
        <title>Enhanging Communication (EC+): #{msg['academicPortal']}</title>
        <style type="text/css">
            body {
                font-size: 8pt;
            }
            .ui-datagrid-column {width: 33%;}
        </style>
    </h:head>
    <h:body>

        <h:form id="form">
            <p:growl id="growl" life="2000" />

            <div class="ui-grid ui-grid-responsive">
                <div class="ui-grid-row">
                    <div class="ui-grid-col-2" >

                        <h:panelGrid columns="2" cellpadding="5">
                            <p:outputLabel value="#{msg['idioma']}" for="idioma"/>
                            <p:selectOneMenu id="idioma" value="#{content.idiomaSeleccionado}" >
                                <p:ajax update=":form:panel" listener="#{content.onIdiomaChange()}" oncomplete="PF('wordsTable').clearFilters()"/>
                                <f:selectItems value="#{content.supportedLanguages}" var="idioma" itemLabel="#{localeBean.getDisplayLanguageForLocale(idioma)}" itemValue="#{idioma.language}"/>
                            </p:selectOneMenu>
                        </h:panelGrid>
                    </div>

                    <div id="brand" class="ui-grid-col-9" style="text-align: center; vertical-align: middle">
                        <h:graphicImage style="display: inline; vertical-align: middle" value="#{resource['logo.png']}" width="100px"/>
                        <h1 style="vertical-align: middle; display: inline">Enhancing Communication (EC+): #{msg['academicPortal']}</h1>
                    </div>

                </div>
            </div>


            <p:tabView id="panel">
                <p:tab id="palabras" title="#{msg['words']}">
                    <div class="ui-grid ui-grid-responsive">
                        <div class="ui-grid-row">
                            <div class="ui-grid-col-4">    
                                <p:dataTable var="palabra" value="#{content.words}" widgetVar="wordsTable"
                                             emptyMessage="#{msg['nowords']}"
                                             paginator="true" rows="20"
                                             paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink}">

                                    <p:column headerText="#{msg['idColumn']}" filterBy="#{palabra.id}" filterMatchMode="exact" sortBy="#{palabra.id}" rendered="#{request.isUserInRole('administrador')}">
                                        <h:outputText value="#{palabra.id}"/>
                                    </p:column>
                                    <p:column headerText="#{msg['wordColumn']}" filterBy="#{palabra.nombre}" filterMatchMode="contains" sortBy="#{palabra.nombre}" >
                                        <p:commandLink update=":form:panel:audiovisual :form:panel:headingPalabra">
                                            <h:outputText value="#{palabra.nombre}"/>
                                            <f:setPropertyActionListener target="#{content.palabraElegida}" value="#{palabra}"/>
                                        </p:commandLink>
                                    </p:column>
                                    <p:column headerText="#{msg['categoryColumn']}" rendered="true" sortBy="#{palabra.categoria.nombre}" filterBy="#{palabra.categoria.nombre}" filterMatchMode="contains" >
                                        <h:outputText value="#{palabra.categoria.nombre}"/>
                                    </p:column>
                                    <p:column headerText="#{msg['advancedColumn']}" rendered="false">
                                    </p:column>
                                    <p:column headerText="#{msg['oppositeColumn']}" rendered="true">
                                    </p:column>
                                </p:dataTable>
                            </div>


                            <div class="ui-grid-col-8">
                                <h2 style="text-align:center"><h:outputText value="#{content.palabraElegida.nombre}" id="headingPalabra"/></h2>
                                <p:dataGrid emptyMessage="#{msg['noWordSelected']}" id="audiovisual" value="#{content.recursoAudioVisualForWord}" var="rav" paginator="false" columns="2" >
                                    <p:tabView value="#{content.resoluciones}" var="resolucion" dynamic="true" >
                                        <p:tab title="#{content.getLocalizedStringForResolution(resolucion)}">
                                            <ui:include src="/WEB-INF/media.xhtml">
                                                <ui:param name="recurso" value="#{rav}"/>
                                                <ui:param name="resolucion" value="#{resolucion}"/>
                                            </ui:include>
                                        </p:tab>
                                    </p:tabView>

                                </p:dataGrid>

                            </div>
                        </div>
                    </div>
                </p:tab>
                <p:tab id="sindromes" title="#{msg['syndromes']}">
                    <div class="ui-grid ui-grid-responsive">
                        <div class="ui-grid-row">
                            <div class="ui-grid-col-4">
                                <p:dataList var="sindrome" value="#{content.syndromes}" type="unordered" itemType="unordered">
                                    <p:commandLink  style="text-decoration:none" update=":form:panel:detalleSindrome">
                                        <h:outputText value="#{sindrome.nombre}"/>
                                        <f:setPropertyActionListener target="#{content.sindromeElegido}" value="#{sindrome}"/>
                                    </p:commandLink>
                                </p:dataList>
                            </div>

                            <h:panelGroup layout="block" id ="detalleSindrome" styleClass="ui-grid-col-8">
                                <iframe frameborder="0" width="100%" height="500px" src="#{content.sindromeURL}"></iframe>
                            </h:panelGroup>

                        </div>
                    </div>
                </p:tab>
                <p:tab id="generalities" title="#{msg['generalities']}">
                    <div class="ui-grid ui-grid-responsive">
                        <div class="ui-grid-row">
                            <div class="ui-grid-col-4">
                                <p:dataList var="generality" value="#{content.generalities}" type="unordered" itemType="unordered">
                                    <p:commandLink  style="text-decoration:none" update=":form:panel:detalleGeneralidad">
                                        <h:outputText value="#{generality.nombre}"/>
                                        <f:setPropertyActionListener target="#{content.sindromeElegido}" value="#{generality}"/>
                                    </p:commandLink>
                                </p:dataList>
                            </div>

                            <h:panelGroup layout="block" id ="detalleGeneralidad" styleClass="ui-grid-col-8">
                                <iframe frameborder="0" width="100%" height="500px" src="#{content.sindromeURL}"></iframe>
                            </h:panelGroup>

                        </div>
                    </div>
                </p:tab>
            </p:tabView>

        </h:form>  

    </h:body>



    <h:outputScript>

        function recalcula(event) {
        var svgDoc = event.currentTarget.contentDocument;
        var svg = svgDoc.getElementsByTagName("svg")[0];
        svg.viewBox.baseVal.x = svg.getBBox().x;
        svg.viewBox.baseVal.width = svg.getBBox().width;
        svg.viewBox.baseVal.y = svg.getBBox().y;
        svg.viewBox.baseVal.height = svg.getBBox().height;
        }

    </h:outputScript>


</html>

